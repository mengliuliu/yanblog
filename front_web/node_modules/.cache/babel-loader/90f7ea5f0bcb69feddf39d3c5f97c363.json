{"ast":null,"code":"import axios from 'axios';\nconst myAxios = axios.create(); // 添加请求拦截器\n\nmyAxios.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\nmyAxios.interceptors.response.use(function (response) {\n  // 2xx 范围内的状态码都会触发该函数。\n  console.log(res); // 对响应数据做点什么\n\n  return response.data;\n}, function (error) {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nexport default myAxios;","map":{"version":3,"sources":["/Users/yanhengfu/Desktop/myproject/yanblog/front_web/src/utils/request.js"],"names":["axios","myAxios","create","interceptors","request","use","config","error","Promise","reject","response","console","log","res","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,EAAhB,C,CAGA;;AACAD,OAAO,CAACE,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAUC,MAAV,EAAkB;AAC/C;AACA,SAAOA,MAAP;AACH,CAHD,EAGG,UAAUC,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAND,E,CAQA;;AACAN,OAAO,CAACE,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CAAkC,UAAUK,QAAV,EAAoB;AAClD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAFkD,CAGlD;;AACA,SAAOH,QAAQ,CAACI,IAAhB;AACH,CALD,EAKG,UAAUP,KAAV,EAAiB;AAChB;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CATD;AAWA,eAAeN,OAAf","sourcesContent":["import axios from 'axios'\n\nconst myAxios = axios.create()\n\n\n// 添加请求拦截器\nmyAxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\nmyAxios.interceptors.response.use(function (response) {\n    // 2xx 范围内的状态码都会触发该函数。\n    console.log(res);\n    // 对响应数据做点什么\n    return response.data;\n}, function (error) {\n    // 超出 2xx 范围的状态码都会触发该函数。\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default myAxios;"]},"metadata":{},"sourceType":"module"}